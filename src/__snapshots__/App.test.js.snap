// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="content"
      >
        <div
          className="stat"
        >
          <div
            className="value"
          >
            0
          </div>
          <div
            className="title"
          >
            Generated Numbers
          </div>
        </div>
        <div
          className="main"
        >
          <div
            className="header"
          >
            <h1>
              . . . .
            </h1>
          </div>
          <div
            className="button-wrapper"
          >
            <button
              className="button generate"
              onClick={[Function]}
            >
              Generate New Number
            </button>
            <t
              bodyClass=""
              content={[Function]}
              copyStyles={true}
              onAfterPrint={[Function]}
              trigger={[Function]}
            />
            <div
              style={
                Object {
                  "display": "none",
                }
              }
            >
              <PDFPrint />
            </div>
          </div>
        </div>
      </div>,
      "className": "App",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="stat"
          >
            <div
              className="value"
            >
              0
            </div>
            <div
              className="title"
            >
              Generated Numbers
            </div>
          </div>,
          <div
            className="main"
          >
            <div
              className="header"
            >
              <h1>
                . . . .
              </h1>
            </div>
            <div
              className="button-wrapper"
            >
              <button
                className="button generate"
                onClick={[Function]}
              >
                Generate New Number
              </button>
              <t
                bodyClass=""
                content={[Function]}
                copyStyles={true}
                onAfterPrint={[Function]}
                trigger={[Function]}
              />
              <div
                style={
                  Object {
                    "display": "none",
                  }
                }
              >
                <PDFPrint />
              </div>
            </div>
          </div>,
        ],
        "className": "content",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="value"
              >
                0
              </div>,
              <div
                className="title"
              >
                Generated Numbers
              </div>,
            ],
            "className": "stat",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": 0,
                "className": "value",
              },
              "ref": null,
              "rendered": 0,
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Generated Numbers",
                "className": "title",
              },
              "ref": null,
              "rendered": "Generated Numbers",
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="header"
              >
                <h1>
                  . . . .
                </h1>
              </div>,
              <div
                className="button-wrapper"
              >
                <button
                  className="button generate"
                  onClick={[Function]}
                >
                  Generate New Number
                </button>
                <t
                  bodyClass=""
                  content={[Function]}
                  copyStyles={true}
                  onAfterPrint={[Function]}
                  trigger={[Function]}
                />
                <div
                  style={
                    Object {
                      "display": "none",
                    }
                  }
                >
                  <PDFPrint />
                </div>
              </div>,
            ],
            "className": "main",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <h1>
                  . . . .
                </h1>,
                "className": "header",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": ". . . .",
                },
                "ref": null,
                "rendered": ". . . .",
                "type": "h1",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <button
                    className="button generate"
                    onClick={[Function]}
                  >
                    Generate New Number
                  </button>,
                  <t
                    bodyClass=""
                    content={[Function]}
                    copyStyles={true}
                    onAfterPrint={[Function]}
                    trigger={[Function]}
                  />,
                  <div
                    style={
                      Object {
                        "display": "none",
                      }
                    }
                  >
                    <PDFPrint />
                  </div>,
                ],
                "className": "button-wrapper",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Generate New Number",
                    "className": "button generate",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": "Generate New Number",
                  "type": "button",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "bodyClass": "",
                    "content": [Function],
                    "copyStyles": true,
                    "onAfterPrint": [Function],
                    "onBeforePrint": undefined,
                    "pageStyle": undefined,
                    "trigger": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <PDFPrint />,
                    "style": Object {
                      "display": "none",
                    },
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {},
                    "ref": [Function],
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": "div",
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="content"
        >
          <div
            className="stat"
          >
            <div
              className="value"
            >
              0
            </div>
            <div
              className="title"
            >
              Generated Numbers
            </div>
          </div>
          <div
            className="main"
          >
            <div
              className="header"
            >
              <h1>
                . . . .
              </h1>
            </div>
            <div
              className="button-wrapper"
            >
              <button
                className="button generate"
                onClick={[Function]}
              >
                Generate New Number
              </button>
              <t
                bodyClass=""
                content={[Function]}
                copyStyles={true}
                onAfterPrint={[Function]}
                trigger={[Function]}
              />
              <div
                style={
                  Object {
                    "display": "none",
                  }
                }
              >
                <PDFPrint />
              </div>
            </div>
          </div>
        </div>,
        "className": "App",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="stat"
            >
              <div
                className="value"
              >
                0
              </div>
              <div
                className="title"
              >
                Generated Numbers
              </div>
            </div>,
            <div
              className="main"
            >
              <div
                className="header"
              >
                <h1>
                  . . . .
                </h1>
              </div>
              <div
                className="button-wrapper"
              >
                <button
                  className="button generate"
                  onClick={[Function]}
                >
                  Generate New Number
                </button>
                <t
                  bodyClass=""
                  content={[Function]}
                  copyStyles={true}
                  onAfterPrint={[Function]}
                  trigger={[Function]}
                />
                <div
                  style={
                    Object {
                      "display": "none",
                    }
                  }
                >
                  <PDFPrint />
                </div>
              </div>
            </div>,
          ],
          "className": "content",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="value"
                >
                  0
                </div>,
                <div
                  className="title"
                >
                  Generated Numbers
                </div>,
              ],
              "className": "stat",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": 0,
                  "className": "value",
                },
                "ref": null,
                "rendered": 0,
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Generated Numbers",
                  "className": "title",
                },
                "ref": null,
                "rendered": "Generated Numbers",
                "type": "div",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="header"
                >
                  <h1>
                    . . . .
                  </h1>
                </div>,
                <div
                  className="button-wrapper"
                >
                  <button
                    className="button generate"
                    onClick={[Function]}
                  >
                    Generate New Number
                  </button>
                  <t
                    bodyClass=""
                    content={[Function]}
                    copyStyles={true}
                    onAfterPrint={[Function]}
                    trigger={[Function]}
                  />
                  <div
                    style={
                      Object {
                        "display": "none",
                      }
                    }
                  >
                    <PDFPrint />
                  </div>
                </div>,
              ],
              "className": "main",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <h1>
                    . . . .
                  </h1>,
                  "className": "header",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": ". . . .",
                  },
                  "ref": null,
                  "rendered": ". . . .",
                  "type": "h1",
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <button
                      className="button generate"
                      onClick={[Function]}
                    >
                      Generate New Number
                    </button>,
                    <t
                      bodyClass=""
                      content={[Function]}
                      copyStyles={true}
                      onAfterPrint={[Function]}
                      trigger={[Function]}
                    />,
                    <div
                      style={
                        Object {
                          "display": "none",
                        }
                      }
                    >
                      <PDFPrint />
                    </div>,
                  ],
                  "className": "button-wrapper",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Generate New Number",
                      "className": "button generate",
                      "onClick": [Function],
                    },
                    "ref": null,
                    "rendered": "Generate New Number",
                    "type": "button",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "bodyClass": "",
                      "content": [Function],
                      "copyStyles": true,
                      "onAfterPrint": [Function],
                      "onBeforePrint": undefined,
                      "pageStyle": undefined,
                      "trigger": [Function],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": <PDFPrint />,
                      "style": Object {
                        "display": "none",
                      },
                    },
                    "ref": null,
                    "rendered": Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "class",
                      "props": Object {},
                      "ref": [Function],
                      "rendered": null,
                      "type": [Function],
                    },
                    "type": "div",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
