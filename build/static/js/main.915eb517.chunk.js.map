{"version":3,"sources":["utils/generator.js","PDFPrint.jsx","App.jsx","index.jsx"],"names":["generateNewNumber","generatedNumber","Math","floor","random","paddedNumber","padNumber","length","saveNumberToFile","numberOfTimes","number","index","concat","numberList","localStorage","getItem","storedData","JSON","parse","push","setItem","stringify","getNumberList","clearStorageList","removeItem","PDFPrint","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","numbers","setState","react_default","a","createElement","sort","map","i","key","Component","App","generateNumber","total","clearStorage","window","location","reload","isGenerating","_this2","_this$state","className","onClick","lib_default","trigger","content","componentRef","onAfterPrint","style","display","src_PDFPrint","ref","el","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.915eb517.chunk.js","sourcesContent":["export const generateNewNumber = () => {\n  const generatedNumber = Math.floor(Math.random() * 1000000000);\n  const paddedNumber = padNumber(10 - (generatedNumber + '').length, generatedNumber);\n  saveNumberToFile(generatedNumber);\n  return paddedNumber;\n}\n\n\nconst padNumber = (numberOfTimes, number) => {\n  let paddedNumber = number;\n  for (let index = 0; index < numberOfTimes; index++) {\n    paddedNumber = `0${paddedNumber}`;\n  }\n  return paddedNumber;\n}\n\nconst saveNumberToFile = (number) => {\n  const numberList = localStorage.getItem('numbers');\n  if (numberList) {\n    const storedData = JSON.parse(numberList);\n    storedData.push(number);\n    localStorage.setItem('numbers', JSON.stringify(storedData));\n  } else {\n    localStorage.setItem('numbers', JSON.stringify([number]));\n  }\n}\n\nexport const getNumberList = () => {\n  const numberList = localStorage.getItem('numbers');\n  if (numberList) {\n    return JSON.parse(numberList);\n  }\n  return null;\n}\n\nexport const clearStorageList = () => {\n  localStorage.removeItem('numbers');\n}\n","import React, { Component } from 'react';\nimport { getNumberList } from './utils/generator';\n\nclass PDFPrint extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      numbers: []\n    }\n  }\n  componentDidMount() {\n    const numberList = getNumberList();\n    if (numberList) {\n      this.setState({\n        numbers: numberList\n      });\n    }\n  }\n  render() {\n    const { numbers } = this.state;\n    return (\n      <div>\n        {numbers.length > 0 && numbers.sort().map((number, i) => (\n          <h4 key={i}>{number}</h4>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default PDFPrint;\n","import React, { Component } from 'react';\nimport ReactToPrint from \"react-to-print\";\nimport { generateNewNumber, getNumberList, clearStorageList } from './utils/generator';\nimport PDFPrint from './PDFPrint';\nimport './App.scss';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      total: 0,\n      number: '',\n      isGenerating: false\n    }\n  }\n\n  componentDidMount() {\n    const numberList = getNumberList();\n    if (numberList) {\n      this.setState({\n        total: numberList.length\n      })\n    }\n  }\n\n  generateNumber = () => {\n    const generatedNumber = generateNewNumber();\n    const numberList = getNumberList();\n    if (numberList) {\n      this.setState({\n        number: generatedNumber,\n        total: numberList.length\n      })\n    } else {\n      this.setState({\n        number: generatedNumber,\n        total: 0\n      });\n    }\n  }\n\n  clearStorage = () => {\n    clearStorageList();\n    window.location.reload();\n  }\n\n  render() {\n    const { total, number } = this.state;\n    return (\n      <div className=\"App\">\n        <div className=\"content\">\n          <div className=\"stat\">\n            <div className=\"value\">{total}</div>\n            <div className=\"title\">Generated Numbers</div>\n          </div>\n          <div className=\"main\">\n            <div className=\"header\">\n              <h1>{number === '' ? ('. . . .') : number}</h1>\n            </div>\n            <div className=\"button-wrapper\">\n              <button onClick={this.generateNumber} className=\"button generate\">Generate New Number</button>\n              <ReactToPrint\n                trigger={() => <button className=\"button download\">Download Generated Numbers</button>}\n                content={() => this.componentRef}\n                onAfterPrint={this.clearStorage}\n              />\n              <div style={{ display: 'none' }}>\n                <PDFPrint ref={el => (this.componentRef = el)} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}